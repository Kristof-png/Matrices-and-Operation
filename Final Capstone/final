import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import pearsonr
import statsmodels.api as sm

# Load dataset
df = pd.read_csv("M5_World_Championship.csv")
df.head()

percentage_columns = [
    'T_WinRate', 'T_PickPercentage', 'BS_WinRate', 
    'RS_WinRate', 'T_BansPercentage', 'T_PicksBansPercentage'
]

# Clean invalid values and convert to float
for col in percentage_columns:
    df[col] = df[col].replace('-', np.nan)
    df[col] = df[col].str.replace('%', '', regex=True).astype(float)

# Drop rows with missing data
df_cleaned = df.dropna()
print("Cleaned dataset length:", len(df_cleaned))
df_cleaned.head()

print("Mean picks:", np.mean(df_cleaned['T_Picked']))
print("Median picks:", np.median(df_cleaned['T_Picked']))
print("Standard deviation:", np.std(df_cleaned['T_Picked']))
print("Max picks:", np.max(df_cleaned['T_Picked']))
print("Min picks:", np.min(df_cleaned['T_Picked']))

correlation, p_value = pearsonr(df_cleaned['T_Picked'], df_cleaned['T_WinRate'])
print("Correlation coefficient:", correlation)
print("P-value:", p_value)

X = sm.add_constant(df_cleaned['T_Picked'])
y = df_cleaned['T_WinRate']
model = sm.OLS(y, X).fit()
print(model.summary())

plt.figure(figsize=(10, 6))
sns.regplot(x='T_Picked', y='T_WinRate', data=df_cleaned, line_kws={"color": "red"})
plt.title('Correlation Between Pick Count and Win Rate')
plt.xlabel('Times Picked')
plt.ylabel('Win Rate (%)')
plt.tight_layout()
plt.show()

top_picked = df_cleaned.sort_values(by='T_Picked', ascending=False).head(10)

plt.figure(figsize=(12, 6))
sns.barplot(x='T_Picked', y='Hero', data=top_picked, palette='Blues_d')
plt.title('Top 10 Most Picked Heroes - M5 World Championship')
plt.xlabel('Number of Picks')
plt.ylabel('Hero')
plt.tight_layout()
plt.show()

role_counts = df_cleaned['Roles'].value_counts()

plt.figure(figsize=(8, 8))
plt.pie(role_counts, labels=role_counts.index, autopct='%1.1f%%', startangle=140)
plt.title('Hero Role Distribution')
plt.axis('equal')
plt.show()